@using JobTastic.Services.IServices;
@model IEnumerable<JobTastic.Models.JobOfferViewModels.JobOfferViewModel>
@inject IAuthService AuthService

@{
    ViewData["Title"] = "Job offers";
}
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">
    <link rel="shortcut icon" type="image/x-icon" href="assets/img/favicon.ico">

    <!-- ===============================================-->
    <!--    Stylesheets-->
    <!-- ===============================================-->
    <link href="~/css/theme.css" rel="stylesheet" />
    <link href="~/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/style.css" rel="stylesheet">


</head>

<main class="main" id="top">
    <section class="py-0" id="home">
        
        <div class="container">
            < class="row align-items-center min-vh-75 min-vh-md-100">
                <div class="col-md-7 col-lg-6 py-6 text-sm-start text-center">
                    <h1>@ViewData["Title"]</h1>
                    <div class="pt-3">
                        <form asp-action="Search" method="get" class="form-inline">
                            @if (await AuthService.IsSignedIn(User))
                            {
                                <a asp-action="Create" class="btn btn-success btn-sm">Create</a>
                            }
                            <input name="phrase" class="form-control input-sm" placeholder="@ViewData["phrase"]" autofocus />
                            <input type="submit" value="Search" class="btn btn-default btn-sm" />
                        </form>
                    </div>
                </div>

                 
                                    <table class="table">
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Title)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.JobCategory)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.JobType)
                                            </th>
                                            <th>
                            @Html.ActionLink("Salary", "Index", new { sortOrder = ViewBag.SalarySortParm })
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Location)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Author)
                                            </th>
                                            <th>
                            @Html.ActionLink("Submission Date ", "Index", new { sortOrder = ViewBag.DateSortParm })

                                            </th>
                                            <th></th>
                                        </tr>
                                        <!-- Count of Job list End -->
                                        <!-- single-job-content -->
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Title)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.JobCategory.Name)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.JobType.Name)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Salary)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Location)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Submitted)
                                                </td>
                                                <td>
                                                   
                                                    @Html.ActionLink("Details", "Details", new { id=item.JobOfferId }) 
                                          
                                                </td>
                                            </tr>
                                               
                                                
                                        }
                                        </table>
                      
  
        


</section>
</main>